version: '3.4'
services:
  redis:
    restart: always
    image: redis
    container_name: cache
    expose:
      - 6379
    networks:
      - backend

  postgres:
    restart: always
    image: bitnami/postgresql:latest
    container_name: database
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: challenge
      POSTGRES_PASSWORD: challenge
      POSTGRES_DB: challenge
    volumes:
      - "pgdata:/var/lib/postgresql/data"
    networks:
      - backend

  api:
    restart: always
    container_name: challenge-api
    build: ./api
    depends_on:
      - postgres
      - redis
    environment:
      PORT: 3000
      NODE_ENV: production
      # NODE_ENV: development
      DB_NAME: challenge
      DB_HOSTNAME: postgres
      DB_USERNAME: challenge
      DB_PASSWORD: challenge
      REDIS_URL: redis://cache
      SENTRY_DSN: https://428c8cb67271469aa670d92d4909e8b0@sentry.io/1814043
    ports:
      - "5000:3000"
    volumes:
      - "./api:/api:delegated"
    networks:
      - frontend
      - backend

  dashboard:
    restart: always
    container_name: challenge-dashboard
    build: ./dashboard
    depends_on:
      - api
    environment:
      # NODE_ENV: development
      NODE_ENV: production
      REACT_APP_API_URL: http://localhost:5000
      REACT_APP_SENTRY_DSN: https://bdd23d649f984c2686b9ebab5ebbe74e@sentry.io/1814962
    ports:
      - "3001:3000"
    volumes:
      - "./dashboard:/dashboard:delegated"
    networks:
      - frontend

networks:
  backend:
  frontend:

volumes:
  pgdata:
